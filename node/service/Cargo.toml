[package]
name = "ajuna-service"

authors.workspace    = true
edition.workspace    = true
homepage.workspace   = true
repository.workspace = true
version.workspace    = true

[dependencies]
# General
hex-literal = { workspace = true }
futures     = { workspace = true }
jsonrpsee   = { workspace = true, features = [ "server" ] }
serde       = { workspace = true, features = [ "derive" ] }

# Substrate
frame-benchmarking      = { workspace = true }
sc-basic-authorship     = { workspace = true }
sc-chain-spec           = { workspace = true }
sc-client-api           = { workspace = true }
sc-consensus            = { workspace = true }
sc-consensus-aura       = { workspace = true }
sc-consensus-grandpa    = { workspace = true }
sc-executor             = { workspace = true }
sc-keystore             = { workspace = true }
sc-network              = { workspace = true }
sc-offchain             = { workspace = true }
sc-service              = { workspace = true }
sc-telemetry            = { workspace = true }
sc-transaction-pool     = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-consensus            = { workspace = true }
sp-consensus-aura       = { workspace = true }
sp-consensus-grandpa    = { workspace = true }
sp-core                 = { workspace = true }
sp-runtime              = { workspace = true }
sp-timestamp            = { workspace = true }

pallet-transaction-payment-rpc = { workspace = true, optional = true }
sc-network-sync                = { workspace = true, optional = true }
sc-rpc                         = { workspace = true, optional = true }
sc-sysinfo                     = { workspace = true, optional = true }
sc-tracing                     = { workspace = true, optional = true }
sp-api                         = { workspace = true, optional = true }
sp-block-builder               = { workspace = true, optional = true }
sp-keystore                    = { workspace = true, optional = true }
sp-offchain                    = { workspace = true, optional = true }
sp-session                     = { workspace = true, optional = true }
sp-transaction-pool            = { workspace = true, optional = true }
substrate-frame-rpc-system     = { workspace = true, optional = true }
substrate-prometheus-endpoint  = { workspace = true, optional = true }

# Polkadot
polkadot-service = { workspace = true, optional = true }
staging-xcm      = { workspace = true, optional = true }

# Cumulus
cumulus-client-cli                      = { workspace = true, optional = true }
cumulus-client-collator                 = { workspace = true, optional = true }
cumulus-client-consensus-aura           = { workspace = true, optional = true }
cumulus-client-consensus-common         = { workspace = true, optional = true }
cumulus-client-consensus-proposer       = { workspace = true, optional = true }
cumulus-client-network                  = { workspace = true, optional = true }
cumulus-client-service                  = { workspace = true, optional = true }
cumulus-primitives-core                 = { workspace = true, optional = true }
cumulus-primitives-parachain-inherent   = { workspace = true, optional = true }
cumulus-relay-chain-inprocess-interface = { workspace = true, optional = true }
cumulus-relay-chain-interface           = { workspace = true, optional = true }
cumulus-relay-chain-minimal-node        = { workspace = true, optional = true }
cumulus-relay-chain-rpc-interface       = { workspace = true, optional = true }

# Ajuna
ajuna-primitives   = { workspace = true }
ajuna-rpc          = { workspace = true }
ajuna-runtime      = { workspace = true, optional = true }
ajuna-solo-runtime = { workspace = true, optional = true }
bajun-runtime      = { workspace = true, optional = true }

[features]
default = [ "solo" ]

ajuna = [ "ajuna-runtime", "para" ]
bajun = [ "bajun-runtime", "para" ]
para = [
    "pallet-transaction-payment-rpc",
    "sc-network-sync",
    "sc-rpc",
    "sc-sysinfo",
    "sc-tracing",
    "sp-api",
    "sp-block-builder",
    "sp-keystore",
    "sp-offchain",
    "sp-session",
    "sp-transaction-pool",
    "substrate-frame-rpc-system",
    "substrate-prometheus-endpoint",
    "polkadot-service/default",
    "staging-xcm",
    "cumulus-client-cli",
    "cumulus-client-consensus-aura",
    "cumulus-client-consensus-common",
    "cumulus-client-consensus-proposer",
    "cumulus-client-network",
    "cumulus-client-service",
    "cumulus-primitives-core",
    "cumulus-primitives-parachain-inherent",
    "cumulus-relay-chain-inprocess-interface",
    "cumulus-relay-chain-interface",
    "cumulus-relay-chain-minimal-node",
    "cumulus-relay-chain-rpc-interface",
]
solo = [ "ajuna-solo-runtime" ]

kusama-native   = [ "polkadot-service/kusama-native" ]
polkadot-native = [ "polkadot-service/polkadot-native" ]
rococo-native   = [ "polkadot-service/rococo-native" ]

runtime-benchmarks = [
    "ajuna-solo-runtime/runtime-benchmarks",
    "bajun-runtime/runtime-benchmarks",
    "ajuna-runtime/runtime-benchmarks",
]

try-runtime = [
    "bajun-runtime/try-runtime",
	"polkadot-service/try-runtime"
]

// Ajuna Node
// Copyright (C) 2022 BlogaTech AG

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

//! Autogenerated weights for `pallet_nfts`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-23, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `weight-calculation`, CPU: `DO-Regular`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: 1024

// Executed Command:
// ./target/release/bajun-para
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-nfts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --header=./HEADER-AGPL
// --output=./runtime/bajun/src/weights/pallet_nfts.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_nfts`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_nfts::WeightInfo for WeightInfo<T> {
	/// Storage: `Nft::NextCollectionId` (r:1 w:1)
	/// Proof: `Nft::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionAccount` (r:0 w:1)
	/// Proof: `Nft::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `182`
		//  Estimated: `3549`
		// Minimum execution time: 80_943_000 picoseconds.
		Weight::from_parts(192_613_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Nft::NextCollectionId` (r:1 w:1)
	/// Proof: `Nft::NextCollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionRoleOf` (r:0 w:1)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionAccount` (r:0 w:1)
	/// Proof: `Nft::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn force_create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3549`
		// Minimum execution time: 88_089_000 picoseconds.
		Weight::from_parts(94_904_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemMetadataOf` (r:1 w:0)
	/// Proof: `Nft::ItemMetadataOf` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:1)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:1001 w:1000)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1000 w:1000)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionMetadataOf` (r:0 w:1)
	/// Proof: `Nft::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(166), added: 2641, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionAccount` (r:0 w:1)
	/// Proof: `Nft::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	/// The range of component `m` is `[0, 1000]`.
	/// The range of component `c` is `[0, 1000]`.
	/// The range of component `a` is `[0, 1000]`.
	fn destroy(m: u32, c: u32, a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `61968 + a * (140 ±0)`
		//  Estimated: `2551990 + a * (2757 ±0)`
		// Minimum execution time: 2_486_232_000 picoseconds.
		Weight::from_parts(2_360_539_833, 0)
			.saturating_add(Weight::from_parts(0, 2551990))
			// Standard Error: 334_911
			.saturating_add(Weight::from_parts(101_358, 0).saturating_mul(m.into()))
			// Standard Error: 334_911
			.saturating_add(Weight::from_parts(455_584, 0).saturating_mul(c.into()))
			// Standard Error: 334_911
			.saturating_add(Weight::from_parts(18_544_036, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(1004))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
			.saturating_add(T::DbWeight::get().writes(1005))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a.into())))
			.saturating_add(Weight::from_parts(0, 2757).saturating_mul(a.into()))
	}
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `421`
		//  Estimated: `3651`
		// Minimum execution time: 112_640_000 picoseconds.
		Weight::from_parts(185_810_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	fn force_mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `421`
		//  Estimated: `3651`
		// Minimum execution time: 93_676_000 picoseconds.
		Weight::from_parts(96_327_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `NftTransfer::NftStatuses` (r:1 w:0)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:1 w:0)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemMetadataOf` (r:1 w:0)
	/// Proof: `Nft::ItemMetadataOf` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nft::ItemPriceOf` (`max_values`: None, `max_size`: Some(117), added: 2592, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nft::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(389), added: 2864, mode: `MaxEncodedLen`)
	/// Storage: `Nft::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	fn burn() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `629`
		//  Estimated: `3747`
		// Minimum execution time: 116_328_000 picoseconds.
		Weight::from_parts(121_756_000, 0)
			.saturating_add(Weight::from_parts(0, 3747))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftTransfer::NftStatuses` (r:1 w:0)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:1 w:0)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:2)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nft::ItemPriceOf` (`max_values`: None, `max_size`: Some(117), added: 2592, mode: `MaxEncodedLen`)
	/// Storage: `Nft::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `658`
		//  Estimated: `3747`
		// Minimum execution time: 88_677_000 picoseconds.
		Weight::from_parts(101_494_000, 0)
			.saturating_add(Weight::from_parts(0, 3747))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:5000 w:5000)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// The range of component `i` is `[0, 5000]`.
	fn redeposit(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `677 + i * (137 ±0)`
		//  Estimated: `3549 + i * (2661 ±0)`
		// Minimum execution time: 29_993_000 picoseconds.
		Weight::from_parts(31_462_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			// Standard Error: 484_481
			.saturating_add(Weight::from_parts(61_375_837, 0).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(i.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(i.into())))
			.saturating_add(Weight::from_parts(0, 2661).saturating_mul(i.into()))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn lock_item_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `3541`
		// Minimum execution time: 76_060_000 picoseconds.
		Weight::from_parts(109_613_000, 0)
			.saturating_add(Weight::from_parts(0, 3541))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn unlock_item_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `3541`
		// Minimum execution time: 68_154_000 picoseconds.
		Weight::from_parts(100_836_000, 0)
			.saturating_add(Weight::from_parts(0, 3541))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:1)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	fn lock_collection() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `3549`
		// Minimum execution time: 58_241_000 picoseconds.
		Weight::from_parts(63_001_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::OwnershipAcceptance` (r:1 w:1)
	/// Proof: `Nft::OwnershipAcceptance` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionAccount` (r:0 w:2)
	/// Proof: `Nft::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn transfer_ownership() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `354`
		//  Estimated: `3549`
		// Minimum execution time: 74_108_000 picoseconds.
		Weight::from_parts(84_626_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionRoleOf` (r:2 w:4)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	fn set_team() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `335`
		//  Estimated: `6078`
		// Minimum execution time: 78_418_000 picoseconds.
		Weight::from_parts(194_266_000, 0)
			.saturating_add(Weight::from_parts(0, 6078))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionAccount` (r:0 w:2)
	/// Proof: `Nft::CollectionAccount` (`max_values`: None, `max_size`: Some(68), added: 2543, mode: `MaxEncodedLen`)
	fn force_collection_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `277`
		//  Estimated: `3549`
		// Minimum execution time: 40_945_000 picoseconds.
		Weight::from_parts(84_415_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:0 w:1)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	fn force_collection_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `242`
		//  Estimated: `3549`
		// Minimum execution time: 49_579_000 picoseconds.
		Weight::from_parts(77_234_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn lock_item_properties() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `3541`
		// Minimum execution time: 69_778_000 picoseconds.
		Weight::from_parts(75_132_000, 0)
			.saturating_add(Weight::from_parts(0, 3541))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:1 w:1)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	fn set_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `533`
		//  Estimated: `3747`
		// Minimum execution time: 162_422_000 picoseconds.
		Weight::from_parts(192_241_000, 0)
			.saturating_add(Weight::from_parts(0, 3747))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:1 w:1)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	fn force_set_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `310`
		//  Estimated: `3747`
		// Minimum execution time: 95_803_000 picoseconds.
		Weight::from_parts(104_270_000, 0)
			.saturating_add(Weight::from_parts(0, 3747))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Nft::Attribute` (r:1 w:1)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn clear_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `780`
		//  Estimated: `3747`
		// Minimum execution time: 159_809_000 picoseconds.
		Weight::from_parts(179_642_000, 0)
			.saturating_add(Weight::from_parts(0, 3747))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Nft::Item` (r:1 w:0)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemAttributesApprovalsOf` (r:1 w:1)
	/// Proof: `Nft::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(389), added: 2864, mode: `MaxEncodedLen`)
	fn approve_item_attributes() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `376`
		//  Estimated: `3854`
		// Minimum execution time: 53_686_000 picoseconds.
		Weight::from_parts(68_325_000, 0)
			.saturating_add(Weight::from_parts(0, 3854))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Item` (r:1 w:0)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemAttributesApprovalsOf` (r:1 w:1)
	/// Proof: `Nft::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(389), added: 2864, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:1001 w:1000)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 1000]`.
	fn cancel_item_attributes_approval(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `889 + n * (172 ±0)`
		//  Estimated: `3854 + n * (2757 ±0)`
		// Minimum execution time: 91_412_000 picoseconds.
		Weight::from_parts(109_691_000, 0)
			.saturating_add(Weight::from_parts(0, 3854))
			// Standard Error: 75_020
			.saturating_add(Weight::from_parts(20_921_551, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2757).saturating_mul(n.into()))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nft::ItemMetadataOf` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	fn set_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `533`
		//  Estimated: `3712`
		// Minimum execution time: 150_740_000 picoseconds.
		Weight::from_parts(228_253_000, 0)
			.saturating_add(Weight::from_parts(0, 3712))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nft::ItemMetadataOf` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	fn clear_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `744`
		//  Estimated: `3712`
		// Minimum execution time: 131_761_000 picoseconds.
		Weight::from_parts(205_732_000, 0)
			.saturating_add(Weight::from_parts(0, 3712))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionMetadataOf` (r:1 w:1)
	/// Proof: `Nft::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(166), added: 2641, mode: `MaxEncodedLen`)
	fn set_collection_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `364`
		//  Estimated: `3631`
		// Minimum execution time: 147_746_000 picoseconds.
		Weight::from_parts(198_424_000, 0)
			.saturating_add(Weight::from_parts(0, 3631))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionMetadataOf` (r:1 w:1)
	/// Proof: `Nft::CollectionMetadataOf` (`max_values`: None, `max_size`: Some(166), added: 2641, mode: `MaxEncodedLen`)
	fn clear_collection_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `554`
		//  Estimated: `3631`
		// Minimum execution time: 145_005_000 picoseconds.
		Weight::from_parts(195_980_000, 0)
			.saturating_add(Weight::from_parts(0, 3631))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	fn approve_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `405`
		//  Estimated: `3651`
		// Minimum execution time: 72_179_000 picoseconds.
		Weight::from_parts(110_088_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	fn cancel_approval() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `413`
		//  Estimated: `3651`
		// Minimum execution time: 75_309_000 picoseconds.
		Weight::from_parts(107_950_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	fn clear_all_transfer_approvals() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `413`
		//  Estimated: `3651`
		// Minimum execution time: 65_287_000 picoseconds.
		Weight::from_parts(88_121_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::OwnershipAcceptance` (r:1 w:1)
	/// Proof: `Nft::OwnershipAcceptance` (`max_values`: None, `max_size`: Some(52), added: 2527, mode: `MaxEncodedLen`)
	fn set_accept_ownership() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3517`
		// Minimum execution time: 50_242_000 picoseconds.
		Weight::from_parts(78_228_000, 0)
			.saturating_add(Weight::from_parts(0, 3517))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:1)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	fn set_collection_max_supply() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `3549`
		// Minimum execution time: 64_053_000 picoseconds.
		Weight::from_parts(93_142_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:1 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:1)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	fn update_mint_settings() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `289`
		//  Estimated: `3538`
		// Minimum execution time: 59_172_000 picoseconds.
		Weight::from_parts(84_840_000, 0)
			.saturating_add(Weight::from_parts(0, 3538))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Item` (r:1 w:0)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nft::ItemPriceOf` (`max_values`: None, `max_size`: Some(117), added: 2592, mode: `MaxEncodedLen`)
	fn set_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `541`
		//  Estimated: `3651`
		// Minimum execution time: 94_343_000 picoseconds.
		Weight::from_parts(110_393_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemPriceOf` (r:1 w:1)
	/// Proof: `Nft::ItemPriceOf` (`max_values`: None, `max_size`: Some(117), added: 2592, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftTransfer::NftStatuses` (r:1 w:0)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:1 w:0)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:2)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Nft::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	fn buy_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `799`
		//  Estimated: `3747`
		// Minimum execution time: 195_774_000 picoseconds.
		Weight::from_parts(305_684_000, 0)
			.saturating_add(Weight::from_parts(0, 3747))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// The range of component `n` is `[0, 1]`.
	fn pay_tips(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 6_339_000 picoseconds.
		Weight::from_parts(13_412_714, 0)
			.saturating_add(Weight::from_parts(0, 0))
			// Standard Error: 353_205
			.saturating_add(Weight::from_parts(28_558_585, 0).saturating_mul(n.into()))
	}
	/// Storage: `Nft::Item` (r:2 w:0)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	fn create_swap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518`
		//  Estimated: `6312`
		// Minimum execution time: 110_791_000 picoseconds.
		Weight::from_parts(131_415_000, 0)
			.saturating_add(Weight::from_parts(0, 6312))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::PendingSwapOf` (r:1 w:1)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:0)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	fn cancel_swap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `566`
		//  Estimated: `3651`
		// Minimum execution time: 73_263_000 picoseconds.
		Weight::from_parts(120_861_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Nft::Item` (r:2 w:2)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::PendingSwapOf` (r:1 w:2)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:0)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `NftTransfer::NftStatuses` (r:2 w:0)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:2 w:0)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:2 w:0)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:4)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemPriceOf` (r:0 w:2)
	/// Proof: `Nft::ItemPriceOf` (`max_values`: None, `max_size`: Some(117), added: 2592, mode: `MaxEncodedLen`)
	fn claim_swap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1017`
		//  Estimated: `6504`
		// Minimum execution time: 408_286_000 picoseconds.
		Weight::from_parts(557_261_000, 0)
			.saturating_add(Weight::from_parts(0, 6504))
			.saturating_add(T::DbWeight::get().reads(11))
			.saturating_add(T::DbWeight::get().writes(10))
	}
	/// Storage: `Nft::CollectionRoleOf` (r:2 w:0)
	/// Proof: `Nft::CollectionRoleOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:10 w:10)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemMetadataOf` (r:1 w:1)
	/// Proof: `Nft::ItemMetadataOf` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 10]`.
	fn mint_pre_signed(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `595`
		//  Estimated: `6078 + n * (2757 ±0)`
		// Minimum execution time: 491_301_000 picoseconds.
		Weight::from_parts(719_966_100, 0)
			.saturating_add(Weight::from_parts(0, 6078))
			// Standard Error: 3_392_144
			.saturating_add(Weight::from_parts(165_755_261, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(6))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2757).saturating_mul(n.into()))
	}
	/// Storage: `Nft::Item` (r:1 w:0)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemAttributesApprovalsOf` (r:1 w:1)
	/// Proof: `Nft::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(389), added: 2864, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:10 w:10)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 10]`.
	fn set_attributes_pre_signed(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `654`
		//  Estimated: `3854 + n * (2757 ±0)`
		// Minimum execution time: 275_991_000 picoseconds.
		Weight::from_parts(345_507_326, 0)
			.saturating_add(Weight::from_parts(0, 3854))
			// Standard Error: 1_294_697
			.saturating_add(Weight::from_parts(196_804_687, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2757).saturating_mul(n.into()))
	}
}

// Ajuna Node
// Copyright (C) 2022 BlogaTech AG

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

//! Autogenerated weights for `pallet_nfts`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-18, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `weight-calculation`, CPU: `DO-Regular`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/bajun-para
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-nfts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --header=./HEADER-AGPL
// --output=./runtime/bajun/src/weights/pallet_nfts.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_nfts`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_nfts::WeightInfo for WeightInfo<T> {
	/// Storage: Nft NextCollectionId (r:1 w:1)
	/// Proof: Nft NextCollectionId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionRoleOf (r:0 w:1)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:0 w:1)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft CollectionAccount (r:0 w:1)
	/// Proof: Nft CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `182`
		//  Estimated: `5038`
		// Minimum execution time: 72_330_000 picoseconds.
		Weight::from_parts(74_089_000, 0)
			.saturating_add(Weight::from_parts(0, 5038))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: Nft NextCollectionId (r:1 w:1)
	/// Proof: Nft NextCollectionId (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionRoleOf (r:0 w:1)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:0 w:1)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft CollectionAccount (r:0 w:1)
	/// Proof: Nft CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	fn force_create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `5038`
		// Minimum execution time: 46_975_000 picoseconds.
		Weight::from_parts(47_671_000, 0)
			.saturating_add(Weight::from_parts(0, 5038))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft ItemMetadataOf (r:1 w:0)
	/// Proof: Nft ItemMetadataOf (max_values: None, max_size: Some(247), added: 2722, mode: MaxEncodedLen)
	/// Storage: Nft CollectionRoleOf (r:1 w:1)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft Attribute (r:1001 w:1000)
	/// Proof: Nft Attribute (max_values: None, max_size: Some(418), added: 2893, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1000 w:1000)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft CollectionMetadataOf (r:0 w:1)
	/// Proof: Nft CollectionMetadataOf (max_values: None, max_size: Some(166), added: 2641, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:0 w:1)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft CollectionAccount (r:0 w:1)
	/// Proof: Nft CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	/// The range of component `m` is `[0, 1000]`.
	/// The range of component `c` is `[0, 1000]`.
	/// The range of component `a` is `[0, 1000]`.
	fn destroy(_m: u32, _c: u32, a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `61968 + a * (276 ±0)`
		//  Estimated: `2566668 + a * (2893 ±0)`
		// Minimum execution time: 2_305_656_000 picoseconds.
		Weight::from_parts(3_401_792_682, 0)
			.saturating_add(Weight::from_parts(0, 2566668))
			// Standard Error: 265_818
			.saturating_add(Weight::from_parts(16_293_039, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(1004))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
			.saturating_add(T::DbWeight::get().writes(1005))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a.into())))
			.saturating_add(Weight::from_parts(0, 2893).saturating_mul(a.into()))
	}
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:1)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Account (r:0 w:1)
	/// Proof: Nft Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	fn mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `421`
		//  Estimated: `17813`
		// Minimum execution time: 94_849_000 picoseconds.
		Weight::from_parts(97_987_000, 0)
			.saturating_add(Weight::from_parts(0, 17813))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:1)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Account (r:0 w:1)
	/// Proof: Nft Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	fn force_mint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `421`
		//  Estimated: `17813`
		// Minimum execution time: 91_277_000 picoseconds.
		Weight::from_parts(97_726_000, 0)
			.saturating_add(Weight::from_parts(0, 17813))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: NftTransfer NftStatuses (r:1 w:0)
	/// Proof: NftTransfer NftStatuses (max_values: None, max_size: Some(37), added: 2512, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:1)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft ItemMetadataOf (r:1 w:0)
	/// Proof: Nft ItemMetadataOf (max_values: None, max_size: Some(247), added: 2722, mode: MaxEncodedLen)
	/// Storage: Nft Account (r:0 w:1)
	/// Proof: Nft Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft ItemPriceOf (r:0 w:1)
	/// Proof: Nft ItemPriceOf (max_values: None, max_size: Some(117), added: 2592, mode: MaxEncodedLen)
	/// Storage: Nft ItemAttributesApprovalsOf (r:0 w:1)
	/// Proof: Nft ItemAttributesApprovalsOf (max_values: None, max_size: Some(389), added: 2864, mode: MaxEncodedLen)
	/// Storage: Nft PendingSwapOf (r:0 w:1)
	/// Proof: Nft PendingSwapOf (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	fn burn() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `629`
		//  Estimated: `17955`
		// Minimum execution time: 112_279_000 picoseconds.
		Weight::from_parts(290_447_000, 0)
			.saturating_add(Weight::from_parts(0, 17955))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(7))
	}
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: NftTransfer NftStatuses (r:1 w:0)
	/// Proof: NftTransfer NftStatuses (max_values: None, max_size: Some(37), added: 2512, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft Account (r:0 w:2)
	/// Proof: Nft Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft ItemPriceOf (r:0 w:1)
	/// Proof: Nft ItemPriceOf (max_values: None, max_size: Some(117), added: 2592, mode: MaxEncodedLen)
	/// Storage: Nft PendingSwapOf (r:0 w:1)
	/// Proof: Nft PendingSwapOf (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	fn transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `658`
		//  Estimated: `17781`
		// Minimum execution time: 83_875_000 picoseconds.
		Weight::from_parts(88_712_000, 0)
			.saturating_add(Weight::from_parts(0, 17781))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft Item (r:5000 w:5000)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// The range of component `i` is `[0, 5000]`.
	fn redeposit(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `677 + i * (137 ±0)`
		//  Estimated: `8077 + i * (2661 ±0)`
		// Minimum execution time: 32_818_000 picoseconds.
		Weight::from_parts(33_792_000, 0)
			.saturating_add(Weight::from_parts(0, 8077))
			// Standard Error: 301_072
			.saturating_add(Weight::from_parts(56_184_905, 0).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(i.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(i.into())))
			.saturating_add(Weight::from_parts(0, 2661).saturating_mul(i.into()))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:1)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	fn lock_item_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `7075`
		// Minimum execution time: 42_244_000 picoseconds.
		Weight::from_parts(44_038_000, 0)
			.saturating_add(Weight::from_parts(0, 7075))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:1)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	fn unlock_item_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `7075`
		// Minimum execution time: 42_178_000 picoseconds.
		Weight::from_parts(44_776_000, 0)
			.saturating_add(Weight::from_parts(0, 7075))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:1)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	fn lock_collection() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `7087`
		// Minimum execution time: 34_071_000 picoseconds.
		Weight::from_parts(36_948_000, 0)
			.saturating_add(Weight::from_parts(0, 7087))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft OwnershipAcceptance (r:1 w:1)
	/// Proof: Nft OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionAccount (r:0 w:2)
	/// Proof: Nft CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	fn transfer_ownership() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `354`
		//  Estimated: `7066`
		// Minimum execution time: 45_991_000 picoseconds.
		Weight::from_parts(48_815_000, 0)
			.saturating_add(Weight::from_parts(0, 7066))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionRoleOf (r:2 w:4)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	fn set_team() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `335`
		//  Estimated: `9627`
		// Minimum execution time: 83_180_000 picoseconds.
		Weight::from_parts(205_978_000, 0)
			.saturating_add(Weight::from_parts(0, 9627))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionAccount (r:0 w:2)
	/// Proof: Nft CollectionAccount (max_values: None, max_size: Some(68), added: 2543, mode: MaxEncodedLen)
	fn force_collection_owner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `277`
		//  Estimated: `3549`
		// Minimum execution time: 37_355_000 picoseconds.
		Weight::from_parts(85_461_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:0 w:1)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	fn force_collection_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `242`
		//  Estimated: `3549`
		// Minimum execution time: 36_726_000 picoseconds.
		Weight::from_parts(81_343_000, 0)
			.saturating_add(Weight::from_parts(0, 3549))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:1)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	fn lock_item_properties() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `429`
		//  Estimated: `7075`
		// Minimum execution time: 40_847_000 picoseconds.
		Weight::from_parts(48_247_000, 0)
			.saturating_add(Weight::from_parts(0, 7075))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Attribute (r:1 w:1)
	/// Proof: Nft Attribute (max_values: None, max_size: Some(418), added: 2893, mode: MaxEncodedLen)
	fn set_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `533`
		//  Estimated: `18045`
		// Minimum execution time: 103_822_000 picoseconds.
		Weight::from_parts(272_694_000, 0)
			.saturating_add(Weight::from_parts(0, 18045))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft Attribute (r:1 w:1)
	/// Proof: Nft Attribute (max_values: None, max_size: Some(418), added: 2893, mode: MaxEncodedLen)
	fn force_set_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `310`
		//  Estimated: `7432`
		// Minimum execution time: 60_086_000 picoseconds.
		Weight::from_parts(149_487_000, 0)
			.saturating_add(Weight::from_parts(0, 7432))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Nft Attribute (r:1 w:1)
	/// Proof: Nft Attribute (max_values: None, max_size: Some(418), added: 2893, mode: MaxEncodedLen)
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	fn clear_attribute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `916`
		//  Estimated: `14507`
		// Minimum execution time: 96_179_000 picoseconds.
		Weight::from_parts(236_232_000, 0)
			.saturating_add(Weight::from_parts(0, 14507))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Nft Item (r:1 w:0)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft ItemAttributesApprovalsOf (r:1 w:1)
	/// Proof: Nft ItemAttributesApprovalsOf (max_values: None, max_size: Some(389), added: 2864, mode: MaxEncodedLen)
	fn approve_item_attributes() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `376`
		//  Estimated: `7505`
		// Minimum execution time: 38_346_000 picoseconds.
		Weight::from_parts(45_305_000, 0)
			.saturating_add(Weight::from_parts(0, 7505))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Item (r:1 w:0)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft ItemAttributesApprovalsOf (r:1 w:1)
	/// Proof: Nft ItemAttributesApprovalsOf (max_values: None, max_size: Some(389), added: 2864, mode: MaxEncodedLen)
	/// Storage: Nft Attribute (r:1001 w:1000)
	/// Proof: Nft Attribute (max_values: None, max_size: Some(418), added: 2893, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 1000]`.
	fn cancel_item_attributes_approval(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `889 + n * (308 ±0)`
		//  Estimated: `14981 + n * (2893 ±0)`
		// Minimum execution time: 62_931_000 picoseconds.
		Weight::from_parts(50_195_737, 0)
			.saturating_add(Weight::from_parts(0, 14981))
			// Standard Error: 261_534
			.saturating_add(Weight::from_parts(16_546_222, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2893).saturating_mul(n.into()))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft ItemMetadataOf (r:1 w:1)
	/// Proof: Nft ItemMetadataOf (max_values: None, max_size: Some(247), added: 2722, mode: MaxEncodedLen)
	fn set_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `533`
		//  Estimated: `17874`
		// Minimum execution time: 79_693_000 picoseconds.
		Weight::from_parts(87_540_000, 0)
			.saturating_add(Weight::from_parts(0, 17874))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft ItemMetadataOf (r:1 w:1)
	/// Proof: Nft ItemMetadataOf (max_values: None, max_size: Some(247), added: 2722, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	fn clear_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `744`
		//  Estimated: `14336`
		// Minimum execution time: 75_756_000 picoseconds.
		Weight::from_parts(78_152_000, 0)
			.saturating_add(Weight::from_parts(0, 14336))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionMetadataOf (r:1 w:1)
	/// Proof: Nft CollectionMetadataOf (max_values: None, max_size: Some(166), added: 2641, mode: MaxEncodedLen)
	fn set_collection_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `364`
		//  Estimated: `14252`
		// Minimum execution time: 69_410_000 picoseconds.
		Weight::from_parts(71_840_000, 0)
			.saturating_add(Weight::from_parts(0, 14252))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft CollectionMetadataOf (r:1 w:1)
	/// Proof: Nft CollectionMetadataOf (max_values: None, max_size: Some(166), added: 2641, mode: MaxEncodedLen)
	fn clear_collection_metadata() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `554`
		//  Estimated: `14252`
		// Minimum execution time: 65_849_000 picoseconds.
		Weight::from_parts(69_376_000, 0)
			.saturating_add(Weight::from_parts(0, 14252))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	fn approve_transfer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `405`
		//  Estimated: `7189`
		// Minimum execution time: 45_400_000 picoseconds.
		Weight::from_parts(49_376_000, 0)
			.saturating_add(Weight::from_parts(0, 7189))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	fn cancel_approval() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `413`
		//  Estimated: `3651`
		// Minimum execution time: 40_553_000 picoseconds.
		Weight::from_parts(41_735_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	fn clear_all_transfer_approvals() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `413`
		//  Estimated: `3651`
		// Minimum execution time: 38_885_000 picoseconds.
		Weight::from_parts(42_688_000, 0)
			.saturating_add(Weight::from_parts(0, 3651))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft OwnershipAcceptance (r:1 w:1)
	/// Proof: Nft OwnershipAcceptance (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	fn set_accept_ownership() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3517`
		// Minimum execution time: 33_450_000 picoseconds.
		Weight::from_parts(88_002_000, 0)
			.saturating_add(Weight::from_parts(0, 3517))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft CollectionConfigOf (r:1 w:1)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	fn set_collection_max_supply() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `7087`
		// Minimum execution time: 38_008_000 picoseconds.
		Weight::from_parts(40_519_000, 0)
			.saturating_add(Weight::from_parts(0, 7087))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft CollectionRoleOf (r:1 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:1)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	fn update_mint_settings() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `289`
		//  Estimated: `7072`
		// Minimum execution time: 37_331_000 picoseconds.
		Weight::from_parts(37_836_000, 0)
			.saturating_add(Weight::from_parts(0, 7072))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Item (r:1 w:0)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft ItemPriceOf (r:0 w:1)
	/// Proof: Nft ItemPriceOf (max_values: None, max_size: Some(117), added: 2592, mode: MaxEncodedLen)
	fn set_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `541`
		//  Estimated: `10730`
		// Minimum execution time: 49_259_000 picoseconds.
		Weight::from_parts(50_637_000, 0)
			.saturating_add(Weight::from_parts(0, 10730))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft ItemPriceOf (r:1 w:1)
	/// Proof: Nft ItemPriceOf (max_values: None, max_size: Some(117), added: 2592, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: NftTransfer NftStatuses (r:1 w:0)
	/// Proof: NftTransfer NftStatuses (max_values: None, max_size: Some(37), added: 2512, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Account (r:0 w:2)
	/// Proof: Nft Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft PendingSwapOf (r:0 w:1)
	/// Proof: Nft PendingSwapOf (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	fn buy_item() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `799`
		//  Estimated: `21363`
		// Minimum execution time: 101_754_000 picoseconds.
		Weight::from_parts(104_306_000, 0)
			.saturating_add(Weight::from_parts(0, 21363))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// The range of component `n` is `[0, 1]`.
	fn pay_tips(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_561_000 picoseconds.
		Weight::from_parts(12_035_491, 0)
			.saturating_add(Weight::from_parts(0, 0))
			// Standard Error: 652_074
			.saturating_add(Weight::from_parts(9_367_208, 0).saturating_mul(n.into()))
	}
	/// Storage: Nft Item (r:2 w:0)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft PendingSwapOf (r:0 w:1)
	/// Proof: Nft PendingSwapOf (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	fn create_swap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `518`
		//  Estimated: `6312`
		// Minimum execution time: 46_850_000 picoseconds.
		Weight::from_parts(107_062_000, 0)
			.saturating_add(Weight::from_parts(0, 6312))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft PendingSwapOf (r:1 w:1)
	/// Proof: Nft PendingSwapOf (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	/// Storage: Nft Item (r:1 w:0)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	fn cancel_swap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `566`
		//  Estimated: `7243`
		// Minimum execution time: 53_965_000 picoseconds.
		Weight::from_parts(100_282_000, 0)
			.saturating_add(Weight::from_parts(0, 7243))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Nft Item (r:2 w:2)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft PendingSwapOf (r:1 w:2)
	/// Proof: Nft PendingSwapOf (max_values: None, max_size: Some(127), added: 2602, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:0)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: NftTransfer NftStatuses (r:2 w:0)
	/// Proof: NftTransfer NftStatuses (max_values: None, max_size: Some(37), added: 2512, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:2 w:0)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: Nft Account (r:0 w:4)
	/// Proof: Nft Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// Storage: Nft ItemPriceOf (r:0 w:2)
	/// Proof: Nft ItemPriceOf (max_values: None, max_size: Some(117), added: 2592, mode: MaxEncodedLen)
	fn claim_swap() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1017`
		//  Estimated: `29097`
		// Minimum execution time: 170_440_000 picoseconds.
		Weight::from_parts(468_857_000, 0)
			.saturating_add(Weight::from_parts(0, 29097))
			.saturating_add(T::DbWeight::get().reads(9))
			.saturating_add(T::DbWeight::get().writes(10))
	}
	/// Storage: Nft CollectionRoleOf (r:2 w:0)
	/// Proof: Nft CollectionRoleOf (max_values: None, max_size: Some(69), added: 2544, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft Item (r:1 w:1)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft ItemConfigOf (r:1 w:1)
	/// Proof: Nft ItemConfigOf (max_values: None, max_size: Some(76), added: 2551, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Nft Attribute (r:10 w:10)
	/// Proof: Nft Attribute (max_values: None, max_size: Some(418), added: 2893, mode: MaxEncodedLen)
	/// Storage: Nft ItemMetadataOf (r:1 w:1)
	/// Proof: Nft ItemMetadataOf (max_values: None, max_size: Some(247), added: 2722, mode: MaxEncodedLen)
	/// Storage: Nft Account (r:0 w:1)
	/// Proof: Nft Account (max_values: None, max_size: Some(116), added: 2591, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 10]`.
	fn mint_pre_signed(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `595`
		//  Estimated: `28652 + n * (2893 ±0)`
		// Minimum execution time: 285_244_000 picoseconds.
		Weight::from_parts(360_513_084, 0)
			.saturating_add(Weight::from_parts(0, 28652))
			// Standard Error: 4_158_887
			.saturating_add(Weight::from_parts(156_602_662, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(6))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2893).saturating_mul(n.into()))
	}
	/// Storage: Nft Item (r:1 w:0)
	/// Proof: Nft Item (max_values: None, max_size: Some(186), added: 2661, mode: MaxEncodedLen)
	/// Storage: Nft ItemAttributesApprovalsOf (r:1 w:1)
	/// Proof: Nft ItemAttributesApprovalsOf (max_values: None, max_size: Some(389), added: 2864, mode: MaxEncodedLen)
	/// Storage: Nft CollectionConfigOf (r:1 w:0)
	/// Proof: Nft CollectionConfigOf (max_values: None, max_size: Some(73), added: 2548, mode: MaxEncodedLen)
	/// Storage: Nft Collection (r:1 w:1)
	/// Proof: Nft Collection (max_values: None, max_size: Some(84), added: 2559, mode: MaxEncodedLen)
	/// Storage: Nft Attribute (r:10 w:10)
	/// Proof: Nft Attribute (max_values: None, max_size: Some(418), added: 2893, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// The range of component `n` is `[0, 10]`.
	fn set_attributes_pre_signed(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `654`
		//  Estimated: `19175 + n * (2893 ±0)`
		// Minimum execution time: 163_675_000 picoseconds.
		Weight::from_parts(395_834_745, 0)
			.saturating_add(Weight::from_parts(0, 19175))
			// Standard Error: 4_337_990
			.saturating_add(Weight::from_parts(107_382_888, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2893).saturating_mul(n.into()))
	}
}

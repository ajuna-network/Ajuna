name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-zombie

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [bajun]
    env:
      SUBWASM_VERSION: v0.19.1
    steps:
      - uses: actions/checkout@v3
      - id: srtool_build
        uses: chevdor/srtool-actions@v0.7.0
        with:
          image: paritytech/srtool
          chain: ${{ matrix.runtime }}
          tag: 1.70.0
      - name: Install subwasm {{ env.SUBWASM_VERSION }}
        run: |
          wget https://github.com/chevdor/subwasm/releases/download/${{ env.SUBWASM_VERSION }}/subwasm_linux_amd64_${{ env.SUBWASM_VERSION }}.deb -O subwasm.deb
          sudo dpkg -i subwasm.deb
      - name: Run subwasm info
        run: |
          echo "\`\`\`" > ${{ matrix.runtime }}-info.txt
          echo -e "${{ matrix.runtime }}-runtime:\n" >> ${{ matrix.runtime }}-info.txt
          subwasm info ${{ steps.srtool_build.outputs.wasm_compressed }} \
            | sed -E 's/^Running subwasm.+$//' \
            | sed '/^$/d' \
            >> ${{ matrix.runtime }}-info.txt
          echo "\`\`\`" >> ${{ matrix.runtime }}-info.txt
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.runtime }}-artifact
          path: |
            ${{ steps.srtool_build.outputs.wasm_compressed }}
            ${{ matrix.runtime }}-info.txt
          if-no-files-found: error

  release-docker:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - {
              name: parachain-bajun,
              build_arg_feature: bajun,
              build_arg_bin: bajun-para,
            }
    outputs:
      image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ matrix.image.name }}
      - name: Get image tag from the tag name
        id: set_image_tag
        run: |
          IMAGE_TAG="${GITHUB_REF#refs/tags/v}"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      - uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: |
            ajuna/${{ matrix.image.name }}:${{ env.image_tag }}
            ajuna/${{ matrix.image.name }}:latest
          build-args: |
            features=${{ matrix.image.build_arg_feature }}
            bin=${{ matrix.image.build_arg_bin }}
          cache-from: type=registry,ref=ajuna/${{ matrix.image.name }}:buildcache
          cache-to: type=registry,ref=ajuna/${{ matrix.image.name }}:buildcache,mode=max

name: Build & Release

on:
  push:
    branches:
      - release/[0-9]+.[0-9]+.[0-9]+
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  check:
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get crate versions
        run: |
          echo "CRATE_VERSIONS=$(
            cargo tree --depth=0 --workspace \
              | egrep -o '[0-9]+\.[0-9]+\.[0-9]' \
              | uniq
          )" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${GITHUB_REF_NAME#release/}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=0.1.0" >> $GITHUB_ENV
      - name: Check release version is bumped
        run: |
          [ -z "$(git tag --list)" ] && {
            echo "skipping as there are no tags yet"
            exit 0
          }
          TAG=$(git describe --tags --abbrev=0) && {
            [ ${TAG#v} -eq ${{ env.RELEASE_VERSION }} ] && {
              echo "release version must be bumped"
              exit 1
            }
          }
      - name: Check crate and release versions match
        run: |
          [ $(echo ${{ env.CRATE_VERSIONS }} | wc -w | xargs) -ne 1 ] && {
            echo "all crate versions should be equal"
            exit 1
          }
          [ "${{ env.CRATE_VERSIONS }}" != "${{ env.RELEASE_VERSION }}" ] && {
            echo "release version is not equal to crate versions"
            exit 1
          }
          exit 0
      - name: Check spec version match
        run: |
          SPEC_VERSION=$(grep "spec_version" runtime/**/lib.rs | egrep -o "[0-9]+")
          CRATE_VERSIONS=${{ env.CRATE_VERSIONS }}
          ZERO_PADDED_VERSION=$(echo "${CRATE_VERSIONS#0.}0" | sed "s/\.//g")
          [ "$SPEC_VERSION" != "$ZERO_PADDED_VERSION" ] && {
            echo "spec version doesn't match release version"
            exit 1
          }
          exit 0
      - name: Check wasm build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --release -p ajuna-runtime

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v3
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            node/res/*.json
            target/${{ matrix.target }}/release/ajuna
            target/${{ matrix.target }}/release/wbuild/ajuna-runtime/ajuna_runtime.compact.wasm

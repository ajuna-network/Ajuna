
//! Autogenerated weights for pallet_ajuna_awesome_avatars
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-23, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `weight-calculation`, CPU: `DO-Regular`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/bajun-para
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet-ajuna-awesome-avatars
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./.maintain/frame-weight-template.hbs
// --output=./pallets/ajuna-awesome-avatars/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_ajuna_awesome_avatars.
pub trait WeightInfo {
	fn mint_free(n: u32, ) -> Weight;
	fn mint_normal(n: u32, ) -> Weight;
	fn forge(n: u32, ) -> Weight;
	fn transfer_avatar_normal(n: u32, ) -> Weight;
	fn transfer_avatar_organizer(n: u32, ) -> Weight;
	fn transfer_free_mints() -> Weight;
	fn set_price() -> Weight;
	fn remove_price() -> Weight;
	fn buy(n: u32, ) -> Weight;
	fn upgrade_storage() -> Weight;
	fn set_organizer() -> Weight;
	fn set_collection_id() -> Weight;
	fn set_treasurer() -> Weight;
	fn claim_treasury() -> Weight;
	fn set_season() -> Weight;
	fn update_global_config() -> Weight;
	fn set_free_mints() -> Weight;
	fn lock_avatar(n: u32, ) -> Weight;
	fn unlock_avatar(n: u32, ) -> Weight;
	fn set_service_account() -> Weight;
	fn prepare_avatar() -> Weight;
	fn unprepare_avatar() -> Weight;
	fn prepare_ipfs() -> Weight;
}

/// Weights for pallet_ajuna_awesome_avatars using the Substrate node and recommended hardware.
pub struct AjunaWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for AjunaWeight<T> {
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::RandomMaterial` (r:1 w:0)
	/// Proof: `Randomness::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:1)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:0 w:6)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 194]`.
	fn mint_free(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1956 + n * (32 ±0)`
		//  Estimated: `9901`
		// Minimum execution time: 244_199_000 picoseconds.
		Weight::from_parts(598_578_297, 9901)
			// Standard Error: 60_058
			.saturating_add(Weight::from_parts(518_207, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::RandomMaterial` (r:1 w:0)
	/// Proof: `Randomness::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:1)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:0 w:6)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 194]`.
	fn mint_normal(_n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2008 + n * (32 ±0)`
		//  Estimated: `9901`
		// Minimum execution time: 323_899_000 picoseconds.
		Weight::from_parts(893_997_123, 9901)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(12_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:5 w:5)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:5 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:5 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:5 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::RandomMaterial` (r:1 w:0)
	/// Proof: `Randomness::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:1)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[5, 190]`.
	fn forge(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2998 + n * (38 ±0)`
		//  Estimated: `14230`
		// Minimum execution time: 247_508_000 picoseconds.
		Weight::from_parts(543_641_599, 14230)
			// Standard Error: 86_456
			.saturating_add(Weight::from_parts(4_159_768, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(27_u64))
			.saturating_add(T::DbWeight::get().writes(9_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn transfer_avatar_normal(_n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15785`
		//  Estimated: `18812`
		// Minimum execution time: 333_405_000 picoseconds.
		Weight::from_parts(969_669_714, 18812)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn transfer_avatar_organizer(_n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15883`
		//  Estimated: `18812`
		// Minimum execution time: 311_921_000 picoseconds.
		Weight::from_parts(936_577_459, 18812)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:0)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:2 w:2)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	fn transfer_free_mints() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1486`
		//  Estimated: `6008`
		// Minimum execution time: 94_361_000 picoseconds.
		Weight::from_parts(136_295_000, 6008)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:0 w:1)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	fn set_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2492`
		//  Estimated: `5134`
		// Minimum execution time: 109_071_000 picoseconds.
		Weight::from_parts(181_164_000, 5134)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	fn remove_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1197`
		//  Estimated: `3638`
		// Minimum execution time: 118_932_000 picoseconds.
		Weight::from_parts(143_643_000, 3638)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:2 w:2)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn buy(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2949 + n * (65 ±0)`
		//  Estimated: `18812`
		// Minimum execution time: 381_946_000 picoseconds.
		Weight::from_parts(671_758_100, 18812)
			// Standard Error: 94_337
			.saturating_add(Weight::from_parts(2_734_605, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	fn upgrade_storage() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1519`
		//  Estimated: `7528`
		// Minimum execution time: 146_571_000 picoseconds.
		Weight::from_parts(354_065_000, 7528)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:0 w:1)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	fn set_organizer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 40_949_000 picoseconds.
		Weight::from_parts(47_223_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CollectionId` (r:0 w:1)
	/// Proof: `AwesomeAvatars::CollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_collection_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `1517`
		// Minimum execution time: 49_903_000 picoseconds.
		Weight::from_parts(62_706_000, 1517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Treasurer` (r:0 w:1)
	/// Proof: `AwesomeAvatars::Treasurer` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	fn set_treasurer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 33_534_000 picoseconds.
		Weight::from_parts(47_316_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Treasurer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Treasurer` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn claim_treasury() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1773`
		//  Estimated: `6196`
		// Minimum execution time: 252_193_000 picoseconds.
		Weight::from_parts(383_096_000, 6196)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	fn set_season() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `5134`
		// Minimum execution time: 53_358_000 picoseconds.
		Weight::from_parts(80_626_000, 5134)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:0 w:1)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	fn update_global_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `1517`
		// Minimum execution time: 46_410_000 picoseconds.
		Weight::from_parts(57_992_000, 1517)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	fn set_free_mints() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `3499`
		// Minimum execution time: 25_228_000 picoseconds.
		Weight::from_parts(58_436_000, 3499)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CollectionId` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:7 w:7)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `NftTransfer::NftStatuses` (r:0 w:1)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn lock_avatar(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1415 + n * (34 ±0)`
		//  Estimated: `20289`
		// Minimum execution time: 476_745_000 picoseconds.
		Weight::from_parts(1_233_729_245, 20289)
			// Standard Error: 131_997
			.saturating_add(Weight::from_parts(1_400_578, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(21_u64))
			.saturating_add(T::DbWeight::get().writes(18_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CollectionId` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `NftTransfer::NftStatuses` (r:1 w:1)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:8 w:7)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemMetadataOf` (r:1 w:0)
	/// Proof: `Nft::ItemMetadataOf` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nft::ItemPriceOf` (`max_values`: None, `max_size`: Some(117), added: 2592, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nft::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(389), added: 2864, mode: `MaxEncodedLen`)
	/// Storage: `Nft::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn unlock_avatar(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2300 + n * (33 ±0)`
		//  Estimated: `23046`
		// Minimum execution time: 497_964_000 picoseconds.
		Weight::from_parts(1_173_095_960, 23046)
			// Standard Error: 123_681
			.saturating_add(Weight::from_parts(1_384_654, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(22_u64))
			.saturating_add(T::DbWeight::get().writes(20_u64))
	}
	/// Storage: `AwesomeAvatars::ServiceAccount` (r:0 w:1)
	/// Proof: `AwesomeAvatars::ServiceAccount` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	fn set_service_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 41_439_000 picoseconds.
		Weight::from_parts(47_411_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::ServiceAccount` (r:1 w:0)
	/// Proof: `AwesomeAvatars::ServiceAccount` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn prepare_avatar() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1863`
		//  Estimated: `6196`
		// Minimum execution time: 314_757_000 picoseconds.
		Weight::from_parts(452_465_000, 6196)
			.saturating_add(T::DbWeight::get().reads(9_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	fn unprepare_avatar() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `344`
		//  Estimated: `3638`
		// Minimum execution time: 39_553_000 picoseconds.
		Weight::from_parts(91_550_000, 3638)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::ServiceAccount` (r:1 w:0)
	/// Proof: `AwesomeAvatars::ServiceAccount` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	fn prepare_ipfs() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `318`
		//  Estimated: `3579`
		// Minimum execution time: 67_760_000 picoseconds.
		Weight::from_parts(92_302_000, 3579)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::RandomMaterial` (r:1 w:0)
	/// Proof: `Randomness::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:1)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:0 w:6)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 194]`.
	fn mint_free(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1956 + n * (32 ±0)`
		//  Estimated: `9901`
		// Minimum execution time: 244_199_000 picoseconds.
		Weight::from_parts(598_578_297, 9901)
			// Standard Error: 60_058
			.saturating_add(Weight::from_parts(518_207, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
	}
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::RandomMaterial` (r:1 w:0)
	/// Proof: `Randomness::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:1)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:0 w:6)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 194]`.
	fn mint_normal(_n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2008 + n * (32 ±0)`
		//  Estimated: `9901`
		// Minimum execution time: 323_899_000 picoseconds.
		Weight::from_parts(893_997_123, 9901)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(12_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:5 w:5)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:5 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:5 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:5 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `Randomness::RandomMaterial` (r:1 w:0)
	/// Proof: `Randomness::RandomMaterial` (`max_values`: Some(1), `max_size`: Some(2594), added: 3089, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:1)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[5, 190]`.
	fn forge(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2998 + n * (38 ±0)`
		//  Estimated: `14230`
		// Minimum execution time: 247_508_000 picoseconds.
		Weight::from_parts(543_641_599, 14230)
			// Standard Error: 86_456
			.saturating_add(Weight::from_parts(4_159_768, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(27_u64))
			.saturating_add(RocksDbWeight::get().writes(9_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn transfer_avatar_normal(_n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15785`
		//  Estimated: `18812`
		// Minimum execution time: 333_405_000 picoseconds.
		Weight::from_parts(969_669_714, 18812)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn transfer_avatar_organizer(_n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15883`
		//  Estimated: `18812`
		// Minimum execution time: 311_921_000 picoseconds.
		Weight::from_parts(936_577_459, 18812)
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::SeasonStats` (r:1 w:0)
	/// Proof: `AwesomeAvatars::SeasonStats` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:2 w:2)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	fn transfer_free_mints() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1486`
		//  Estimated: `6008`
		// Minimum execution time: 94_361_000 picoseconds.
		Weight::from_parts(136_295_000, 6008)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:0 w:1)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	fn set_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2492`
		//  Estimated: `5134`
		// Minimum execution time: 109_071_000 picoseconds.
		Weight::from_parts(181_164_000, 5134)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	fn remove_price() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1197`
		//  Estimated: `3638`
		// Minimum execution time: 118_932_000 picoseconds.
		Weight::from_parts(143_643_000, 3638)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:3 w:3)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:2 w:2)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn buy(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2949 + n * (65 ±0)`
		//  Estimated: `18812`
		// Minimum execution time: 381_946_000 picoseconds.
		Weight::from_parts(671_758_100, 18812)
			// Standard Error: 94_337
			.saturating_add(Weight::from_parts(2_734_605, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	fn upgrade_storage() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1519`
		//  Estimated: `7528`
		// Minimum execution time: 146_571_000 picoseconds.
		Weight::from_parts(354_065_000, 7528)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:0 w:1)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	fn set_organizer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 40_949_000 picoseconds.
		Weight::from_parts(47_223_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CollectionId` (r:0 w:1)
	/// Proof: `AwesomeAvatars::CollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	fn set_collection_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `1517`
		// Minimum execution time: 49_903_000 picoseconds.
		Weight::from_parts(62_706_000, 1517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Treasurer` (r:0 w:1)
	/// Proof: `AwesomeAvatars::Treasurer` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	fn set_treasurer() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 33_534_000 picoseconds.
		Weight::from_parts(47_316_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Treasurer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Treasurer` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CurrentSeasonStatus` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CurrentSeasonStatus` (`max_values`: Some(1), `max_size`: Some(9), added: 504, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Treasury` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Treasury` (`max_values`: None, `max_size`: Some(18), added: 2493, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn claim_treasury() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1773`
		//  Estimated: `6196`
		// Minimum execution time: 252_193_000 picoseconds.
		Weight::from_parts(383_096_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	fn set_season() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `5134`
		// Minimum execution time: 53_358_000 picoseconds.
		Weight::from_parts(80_626_000, 5134)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:0 w:1)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	fn update_global_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `1517`
		// Minimum execution time: 46_410_000 picoseconds.
		Weight::from_parts(57_992_000, 1517)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Organizer` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Organizer` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerConfigs` (r:1 w:1)
	/// Proof: `AwesomeAvatars::PlayerConfigs` (`max_values`: None, `max_size`: Some(34), added: 2509, mode: `MaxEncodedLen`)
	fn set_free_mints() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `96`
		//  Estimated: `3499`
		// Minimum execution time: 25_228_000 picoseconds.
		Weight::from_parts(58_436_000, 3499)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CollectionId` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::CollectionConfigOf` (r:1 w:0)
	/// Proof: `Nft::CollectionConfigOf` (`max_values`: None, `max_size`: Some(73), added: 2548, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:7 w:7)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `NftTransfer::NftStatuses` (r:0 w:1)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn lock_avatar(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1415 + n * (34 ±0)`
		//  Estimated: `20289`
		// Minimum execution time: 476_745_000 picoseconds.
		Weight::from_parts(1_233_729_245, 20289)
			// Standard Error: 131_997
			.saturating_add(Weight::from_parts(1_400_578, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(21_u64))
			.saturating_add(RocksDbWeight::get().writes(18_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:1)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Owners` (r:2 w:2)
	/// Proof: `AwesomeAvatars::Owners` (`max_values`: None, `max_size`: Some(6436), added: 8911, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::PlayerSeasonConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::PlayerSeasonConfigs` (`max_values`: None, `max_size`: Some(4063), added: 6538, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::CollectionId` (r:1 w:0)
	/// Proof: `AwesomeAvatars::CollectionId` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
	/// Storage: `NftTransfer::NftStatuses` (r:1 w:1)
	/// Proof: `NftTransfer::NftStatuses` (`max_values`: None, `max_size`: Some(37), added: 2512, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Attribute` (r:8 w:7)
	/// Proof: `Nft::Attribute` (`max_values`: None, `max_size`: Some(282), added: 2757, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Collection` (r:1 w:1)
	/// Proof: `Nft::Collection` (`max_values`: None, `max_size`: Some(84), added: 2559, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemConfigOf` (r:1 w:1)
	/// Proof: `Nft::ItemConfigOf` (`max_values`: None, `max_size`: Some(76), added: 2551, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Item` (r:1 w:1)
	/// Proof: `Nft::Item` (`max_values`: None, `max_size`: Some(186), added: 2661, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemMetadataOf` (r:1 w:0)
	/// Proof: `Nft::ItemMetadataOf` (`max_values`: None, `max_size`: Some(247), added: 2722, mode: `MaxEncodedLen`)
	/// Storage: `Nft::Account` (r:0 w:1)
	/// Proof: `Nft::Account` (`max_values`: None, `max_size`: Some(116), added: 2591, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemPriceOf` (r:0 w:1)
	/// Proof: `Nft::ItemPriceOf` (`max_values`: None, `max_size`: Some(117), added: 2592, mode: `MaxEncodedLen`)
	/// Storage: `Nft::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `Nft::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(389), added: 2864, mode: `MaxEncodedLen`)
	/// Storage: `Nft::PendingSwapOf` (r:0 w:1)
	/// Proof: `Nft::PendingSwapOf` (`max_values`: None, `max_size`: Some(127), added: 2602, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 200]`.
	fn unlock_avatar(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2300 + n * (33 ±0)`
		//  Estimated: `23046`
		// Minimum execution time: 497_964_000 picoseconds.
		Weight::from_parts(1_173_095_960, 23046)
			// Standard Error: 123_681
			.saturating_add(Weight::from_parts(1_384_654, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(22_u64))
			.saturating_add(RocksDbWeight::get().writes(20_u64))
	}
	/// Storage: `AwesomeAvatars::ServiceAccount` (r:0 w:1)
	/// Proof: `AwesomeAvatars::ServiceAccount` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	fn set_service_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 41_439_000 picoseconds.
		Weight::from_parts(47_411_000, 0)
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Trade` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Trade` (`max_values`: None, `max_size`: Some(50), added: 2525, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::LockedAvatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::LockedAvatars` (`max_values`: None, `max_size`: Some(32), added: 2507, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::ServiceAccount` (r:1 w:0)
	/// Proof: `AwesomeAvatars::ServiceAccount` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Seasons` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Seasons` (`max_values`: None, `max_size`: Some(1669), added: 4144, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn prepare_avatar() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1863`
		//  Estimated: `6196`
		// Minimum execution time: 314_757_000 picoseconds.
		Weight::from_parts(452_465_000, 6196)
			.saturating_add(RocksDbWeight::get().reads(9_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `AwesomeAvatars::Avatars` (r:1 w:0)
	/// Proof: `AwesomeAvatars::Avatars` (`max_values`: None, `max_size`: Some(173), added: 2648, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	fn unprepare_avatar() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `344`
		//  Estimated: `3638`
		// Minimum execution time: 39_553_000 picoseconds.
		Weight::from_parts(91_550_000, 3638)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AwesomeAvatars::ServiceAccount` (r:1 w:0)
	/// Proof: `AwesomeAvatars::ServiceAccount` (`max_values`: Some(1), `max_size`: Some(32), added: 527, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::GlobalConfigs` (r:1 w:0)
	/// Proof: `AwesomeAvatars::GlobalConfigs` (`max_values`: Some(1), `max_size`: Some(15), added: 510, mode: `MaxEncodedLen`)
	/// Storage: `AwesomeAvatars::Preparation` (r:1 w:1)
	/// Proof: `AwesomeAvatars::Preparation` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	fn prepare_ipfs() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `318`
		//  Estimated: `3579`
		// Minimum execution time: 67_760_000 picoseconds.
		Weight::from_parts(92_302_000, 3579)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
